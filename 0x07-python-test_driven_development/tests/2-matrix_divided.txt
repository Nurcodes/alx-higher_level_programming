=========================
The ``matrix_divided``
=========================

This module contains one function called


``matrix_divided`` returns a new list of divided lists, from an input arguement

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

First import ``matrix_divided`` from ``2-matrix_divided``
	
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	
Now use it:

	>>> matrix_divided([[1,2],[1,2]], 3)
	[[0.33, 0.67], [0.33, 0.67]]

-------------------------------------------------------------------------------

	>>> matrix_divided([[1, 4], [3, 2]], 2)
	[[0.5, 2.0], [1.5, 1.0]]

-------------------------------------------------------------------------------

Edge cases:
	
	===============TypeError====Matrix must be a matrix============


	>>> matrix_divided(['f', [2, 2]], 1)
	Traceback (most recent call last):
	   	 ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	
	===============TypeError===Each row must have same size==============
	
	>>> matrix_divided([[1, 1, 1], [1, 1]], 2)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	
	===============TypeError======Div must be a number============

	>>> matrix_divided([[2, 3, 4], [1, 3, 4]], 'test')
	Traceback (most recent call last):
		...
	TypeError: div must be a number
	

	================TypeError======Div must not be zero============
	
	>>> matrix_divided([[9, 9], [9, 7]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
	
